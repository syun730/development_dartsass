@mixin fs( $size, $importantFlg:false ) {
  font-size: $size + px + if($importantFlg, ' !important', '');
  font-size: $size/10 + rem + if($importantFlg, ' !important', '');
}

// media query
// --------------------------------------------------------------------------
// @include mixins.mq(引数1, 引数2) {
//   [style]
// }
//
// 引数1: sm, md, lg, number
// 引数2: '', min

// 1. マルチデバイスで共通のスタイル
// 2. 特に小さいデバイス向けの調整スタイル
// 3. スマートフォン向けのスタイル
// 4. タブレット、PC向けのスタイル
// 5. 1209px(1208px + 1px)以上向けのスタイル
//
// ```scss
// .example {
//   color: #000; // 1
//
//   @include mixins.mq(sm) {
//     content: 'sm'; // 2
//   }
//
//   @include mixins.mq(md) {
//     content: 'md'; // 3
//   }
//
//   @include mixins.mq(md, min) {
//     content: 'md min'; // 4
//   }
//
//   @include mixins.mq(1208px, min) {
//     content: 'number'; // 5
//   }
// }
// ```

// Breakpoint
$screen: (
  sm: 320px,
  md: 768px,
  lg: 1040px,
  lg2: 1210px,
  lg3: 1320px
) !default;

@mixin mq($size, $width: max) {
  $result: 0;
  @if (type-of($size) == number) {
    $result: $size;
  } @else {
    @each $key, $value in $screen {
      @if ($key == $size) {
        $result: $value;
      }
    }
  }
  @if ($width == min) {
    $result: $result + 1;
  }
  @media (#{$width}-width: #{$result}) {
    @content;
  }
}
